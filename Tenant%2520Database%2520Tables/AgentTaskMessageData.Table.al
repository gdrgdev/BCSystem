// ------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// ------------------------------------------------------------------------------------------------
namespace System.Agents.Internal;

/// <summary>
/// Stores message data for agent tasks, including both input messages from users and output messages generated by agents.
/// </summary>
/// <remarks>
/// This table manages the conversation flow for agent tasks by storing all messages exchanged between users and agents.
/// Messages can be inputs (from users) or outputs (from agents) with various status states including draft, sent, reviewed,
/// rejected, or discarded. Supports message review workflows, external system integration, and properties for extensibility.
/// Message content is stored as BLOBs to accommodate various formats and sizes. Used by the agent framework to maintain
/// conversation history and enable message review processes.
/// </remarks>
table 2000000268 "Agent Task Message Data"
{
    Caption = 'Agent Task Message Data';
    DataPerCompany = false;
    ReplicateData = false;
    Scope = OnPrem;
    Access = Internal;

    fields
    {
        /// <summary>
        /// Identifier of the agent task this message belongs to.
        /// </summary>
        field(1; "Task ID"; BigInteger)
        {
            Caption = 'Task ID';
            TableRelation = "Agent Task Data".ID;
        }
        /// <summary>
        /// Unique auto-incrementing identifier for the message within the task.
        /// </summary>
        field(2; "ID"; BigInteger)
        {
            AutoIncrement = true;
        }
        /// <summary>
        /// Type of message indicating whether it's an input from user or output from agent.
        /// </summary>
        field(3; "Type"; Option)
        {
            Caption = 'Type';
            OptionCaption = 'Input,Output';
            OptionMembers = Input,Output;
        }
        /// <summary>
        /// Current status of the message in the review and approval workflow.
        /// </summary>
        field(4; "Status"; Option)
        {
            Caption = 'Status';
            OptionCaption = ',Draft,Sent,Reviewed,Rejected,Discarded';
            OptionMembers = " ",Draft,Sent,Reviewed,Rejected,Discarded;
        }
        /// <summary>
        /// Message content stored as BLOB to accommodate various formats and sizes.
        /// </summary>
        field(5; Content; Blob)
        {
        }
        /// <summary>
        /// External identifier for the message used for integration with external systems.
        /// </summary>
        field(6; "External ID"; Text[2048])
        {
            Caption = 'External ID';
        }
        /// <summary>
        /// System ID of the input message this message is responding to, creating message threading.
        /// </summary>
        field(7; "Input Message System ID"; Guid)
        {
            Caption = 'Input Message System ID';
            TableRelation = "Agent Task Message Data".SystemId;
        }
        /// <summary>
        /// Reason or explanation for the current status, particularly useful for rejected messages.
        /// </summary>
        field(8; "Status Reason"; Text[250])
        {
            Caption = 'Status Reason';
        }
        /// <summary>
        /// Company name context for the task this message belongs to, calculated from the task data.
        /// </summary>
        field(9; "Company Name"; Text[30])
        {
            Caption = 'Company Name';
            FieldClass = FlowField;
            CalcFormula = lookup("Agent Task Data"."Company Name" where(ID = field("Task ID")));
        }
        /// <summary>
        /// Security ID of the agent user for the task this message belongs to, calculated from the task data.
        /// </summary>
        field(10; "Task Agent User Security ID"; Guid)
        {
            FieldClass = FlowField;
            CalcFormula = lookup("Agent Task Data"."Agent User Security ID" where(ID = field("Task ID")));
        }
        /// <summary>
        /// Sender identification for input messages, indicating who submitted the message.
        /// </summary>
        field(11; From; Text[250])
        {
            Caption = 'From';
            ToolTip = 'Specifies the sender of the message when it is an input message.';
        }
        /// <summary>
        /// Custom properties for the message stored as BLOB for extensibility.
        /// </summary>
        field(12; "Properties"; Blob)
        {
            Caption = 'Properties';
            ToolTip = 'Specifies custom properties that can be set on the message.';
        }
        /// <summary>
        /// Indicates whether the message requires human review before processing, primarily for input messages.
        /// </summary>
        field(13; "Requires Review"; Boolean)
        {
            InitValue = true;
            Caption = 'Requires Review';
            ToolTip = 'Specifies whether the message requires to be reviewed by a user. Currently only supported for input messages.';
        }
        /// <summary>
        /// ID of the memory entry this message is associated with for context and continuity.
        /// </summary>
        field(14; "Memory Entry ID"; Integer)
        {
            ToolTip = 'Specifies the memory entry this message is associated with.';
            TableRelation = "Agent Task Memory Entry Data"."ID";
            ValidateTableRelation = false;
        }
    }

    keys
    {
        key(PK; "Task ID", ID)
        {
            Clustered = true;
        }
        key(TaskIDTimestamp; "Task ID", SystemCreatedAt)
        {
        }
        key(TaskIDExternalID; "Task ID", "External ID")
        {
        }
    }
}