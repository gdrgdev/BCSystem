// ------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// ------------------------------------------------------------------------------------------------
namespace System.Agents;

using System.Security.AccessControl;

/// <summary>
/// Virtual table that stores messages exchanged during agent task execution.
/// </summary>
/// <remarks>
/// This table manages the communication flow between agents and users, storing both input messages
/// from users and output messages generated by agents. Essential for maintaining conversation history,
/// message status tracking, and content management in agent interactions. The table supports message
/// threading, review workflows, and external system integration through external IDs.
/// Currently scoped to OnPrem but designed to support Cloud deployment when agents are fully exposed.
/// </remarks>
table 2000000263 "Agent Task Message"
{
    Caption = 'Agent Task Message';
    DataPerCompany = false;
    Scope = OnPrem; // TODO(agent) - This should change to Cloud when ready to expose agents.

    fields
    {
        /// <summary>
        /// The unique identifier of the agent task that this message belongs to.
        /// </summary>
        field(1; "Task ID"; BigInteger)
        {
            Caption = 'Task ID';
            ToolTip = 'Specifies the ID of the task the message belongs to.';
            Editable = false;
            TableRelation = "Agent Task".ID;
        }
        /// <summary>
        /// The unique identifier for this message within the system.
        /// </summary>
        field(2; "ID"; Guid)
        {
            Caption = 'ID';
            ToolTip = 'Specifies the unique identifier for the message.';
            Editable = false;
        }
        /// <summary>
        /// The type of message indicating its direction (Input from user or Output from agent).
        /// </summary>
        field(3; "Type"; Option)
        {
            Caption = 'Type';
            ToolTip = 'Specifies the message type.';
            Editable = false;
            OptionCaption = 'Input,Output';
            OptionMembers = Input,Output;
        }
        /// <summary>
        /// The current status of the message in its workflow lifecycle.
        /// </summary>
        field(4; "Status"; Option)
        {
            Caption = 'Status';
            ToolTip = 'Specifies the message status.';
            OptionCaption = ',Draft,Sent,Reviewed,Rejected,Discarded';
            OptionMembers = " ",Draft,Sent,Reviewed,Rejected,Discarded;
        }
        /// <summary>
        /// The binary content of the message stored as a BLOB.
        /// </summary>
        field(5; Content; Blob)
        {
            Caption = 'Content';
            ToolTip = 'Specifies the message content.';
        }
        /// <summary>
        /// The full name of the user who created this message.
        /// </summary>
        field(6; "Created By Full Name"; Text[80])
        {
            Caption = 'Created By Full Name';
            Tooltip = 'Specifies the full name of the user that created the message.';
            Editable = false;
            FieldClass = FlowField;
            CalcFormula = lookup("User"."Full Name" where("User Security ID" = field(SystemCreatedBy)));
        }
        /// <summary>
        /// An external identifier for integration with external systems like Outlook or Teams.
        /// </summary>
        field(7; "External ID"; Text[2048])
        {
            Caption = 'External ID';
            Tooltip = 'Specifies the external identifier related to the agent task message, such as an Outlook or Teams message identifier.';
        }
        /// <summary>
        /// The identifier of the input message that this output message is responding to.
        /// </summary>
        field(8; "Input Message ID"; Guid)
        {
            Caption = 'Input Message ID';
            ToolTip = 'Specifies the unique identifier for the message that this message answers to. Applicable only for messages of type Output.';
            TableRelation = "Agent Task Message".ID;
        }
        /// <summary>
        /// A textual explanation for the current status of the message.
        /// </summary>
        field(9; "Status Reason"; Text[250])
        {
            Caption = 'Status Reason';
            ToolTip = 'Specifies the reason for the message status, if available.';
        }
        /// <summary>
        /// The sender identification when this is an input message from a user.
        /// </summary>
        field(10; From; Text[250])
        {
            Caption = 'From';
            ToolTip = 'Specifies the sender of the message when it is an input message.';
        }
        /// <summary>
        /// Custom properties that can be set on the message for extensibility.
        /// </summary>
        field(11; "Properties"; Blob)
        {
            Caption = 'Properties';
            ToolTip = 'Specifies custom properties that can be set on the message.';
        }
        /// <summary>
        /// Indicates whether this message requires user review before processing.
        /// </summary>
        field(12; "Requires Review"; Boolean)
        {
            InitValue = true;
            Caption = 'Requires Review';
            ToolTip = 'Specifies whether the message requires to be reviewed by a user. Currently only supported for input messages.';
        }
        /// <summary>
        /// The security ID of the agent user associated with this message.
        /// </summary>
        field(13; "Agent User Security ID"; Guid)
        {
            Caption = 'Agent User Security ID';
            Editable = false;
            TableRelation = Agent."User Security ID";
            Tooltip = 'Specifies the unique identifier for the agent user.';
        }
        /// <summary>
        /// The identifier of the memory entry associated with this message.
        /// </summary>
        field(14; "Memory Entry ID"; Integer)
        {
            Caption = 'Memory Entry ID';
            ToolTip = 'Specifies the memory entry this message is associated with.';
        }
    }

    keys
    {
        key(PK; "Task ID", ID)
        {
            Clustered = true;
        }
    }
}